import React, { useState, useEffect } from 'react';
import { Easing } from 'tweenkle';
import createTween from './createTween';
var defaultOptions = {
  delay: 0,
  duration: 1000,
  ease: Easing.Quad.Out,
  onAnimateProgress: function onAnimateProgress(value) {
    return value;
  },
  onAnimateComplete: function onAnimateComplete(value) {
    return value;
  }
};

var useAnimateProps = function useAnimateProps(prop, options) {
  var tween;

  var _useState = useState(prop),
      propValue = _useState[0],
      setPropValue = _useState[1];

  var ops = Object.assign({}, defaultOptions, options);
  var delay = ops.delay,
      duration = ops.duration,
      ease = ops.ease;
  useEffect(function () {
    if (tween) {
      tween.stop();
    }

    if (propValue !== prop) {
      tween = createTween({
        prop: null,
        value: propValue,
        target: prop,
        tweenProps: {
          delay: delay,
          duration: duration,
          ease: ease
        }
      }, function (animateProp, _ref) {
        var value = _ref.value;
        setPropValue(ops.onAnimateProgress(value));
      }, function (animateProp, _ref2) {
        var value = _ref2.value;
        setPropValue(ops.onAnimateComplete(value));
      });
    }

    return function () {
      if (tween) {
        tween.stop();
      }
    };
  }, [prop]);
  return propValue;
};

export default useAnimateProps;