"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _tweenkle = require("tweenkle");

var _createTween = _interopRequireDefault(require("./createTween"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var defaultOptions = {
  delay: 0,
  duration: 1000,
  ease: _tweenkle.Easing.Quad.Out,
  onAnimateProgress: function onAnimateProgress(value) {
    return value;
  },
  onAnimateComplete: function onAnimateComplete(value) {
    return value;
  }
};

var useAnimateProps = function useAnimateProps(prop, options) {
  var tween;

  var _useState = (0, _react.useState)(prop),
      propValue = _useState[0],
      setPropValue = _useState[1];

  var ops = Object.assign({}, defaultOptions, options);
  var delay = ops.delay,
      duration = ops.duration,
      ease = ops.ease;
  (0, _react.useEffect)(function () {
    if (tween) {
      tween.stop();
    }

    if (propValue !== prop) {
      tween = (0, _createTween["default"])({
        prop: null,
        value: propValue,
        target: prop,
        tweenProps: {
          delay: delay,
          duration: duration,
          ease: ease
        }
      }, function (animateProp, _ref) {
        var value = _ref.value;
        setPropValue(ops.onAnimateProgress(value));
      }, function (animateProp, _ref2) {
        var value = _ref2.value;
        setPropValue(ops.onAnimateComplete(value));
      });
    }

    return function () {
      if (tween) {
        tween.stop();
      }
    };
  }, [prop]);
  return propValue;
};

var _default = useAnimateProps;
exports["default"] = _default;